name: 'ci'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
      - main

jobs:
  dagger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21'

      - name: Install
        run: go get dagger.io/dagger@v0.8.7

      - name: Install Dagger CLI
        run: cd /usr/local && { curl -L https://dl.dagger.io/dagger/install.sh | sh; cd -; }

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Release and deploy with Dagger
        run: dagger run go run ci/dagger/main.go --image-tag=${{ github.sha }}

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.12.2'

      - name: Install Stern
        run: |
          wget https://github.com/stern/stern/releases/download/v1.26.0/stern_1.26.0_linux_amd64.tar.gz
          tar -xzf stern_1.26.0_linux_amd64.tar.gz
          chmod +x stern
          sudo mv stern /usr/local/bin/

      - name: Create kind cluster
        uses: helm/kind-action@v1.7.0
        with:
          config: infra/terraform/dev/kind-config.yaml

      - name: Install Helm chart
        run: |
          set -euo pipefail

          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

          cd deploy/helm/ingress-controller
          helm dependency build
          helm install ingress-controller . \
            -f values.yaml \
            --wait --timeout 10m

          cd ../snippetbox
          helm dependency build

          helm install snippetbox-chart . \
            -f values.yaml \
            -f environments/dev.values.yaml \
            --set "image.tag=${{ github.sha }}" \
            --wait --timeout 10m

          echo "Helm chart installed successfully!"

      - name: Wait for pods to be ready
        run: |
          stern -l  app.kubernetes.io/instance=snippetbox-chart -t &
          STERN_PID=$!
          
          kubectl wait --for=condition=Ready pods -l app.kubernetes.io/instance=snippetbox-chart --timeout=300s
          kill $STERN_PID
      - name: Helm test
        run: |
          set -euo pipefail

          kubectl get po -A
          kubectl get svc -A
          kubectl get ingress -A

          cd deploy/helm/snippetbox
          helm test snippetbox-chart

          echo "Helm tests passed!"
      - name: Test http://localhost response
        run: |
          set -euo pipefail

          curl -v --insecure -s https://localhost
